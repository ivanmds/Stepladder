startup:
  httpClientAuthentication:
    - id: "api_integration_pix"
      type: clientCredential
      clientId: "l7xx4aa0899f169346aab8c1c5eae99c7bda"
      clientSecret: "23d251e9f0464739a81e75a71e0dd14a"
      endpointAuth: "https://pix-h.bancobv.com.br/auth/oauth/v2/token-jwt"
      valueFrom: declared

  apiSecuret:
    type: basic
    user: admin
    password: 123456
    valueFrom: declared
  
#  connections:
#    kafka:
#      valueFrom:
#    redis:
#      valueFrom:


entrypoints:
  routes:
  - route: "api/test"
    method: post
    flowActionId: {id}
  
#  consumers:
#    kafka:
#      - groupId:
#        topicName:
#        actionId: {id}
  

#actions:
#  - id: 1
#    type: http
#    uri: 'https://api/test'
#    contractMapId:
#    autenticationId: 10
  
#  - id: 2
#    type: kafkaConsumer
#    topicName: 'stepladder.test.request'
#    groupId: ''

## how put condictions between actions
#flowActions:
#  - id: 2001
#    actionsId:
#      - 1
#      - 2

#contractMaps:
#  - id: 1005
#    # fromName to destinationName separated by :
#    map:
#      - "customer.address.citi:customer.address.city"
#    remove:
#      - "customer.address.country"

                  
#strategies:
#  - cache:
#      id: redisCache_22
#      type: redis

#  - httpIdempotency:
#      id: idemp_55
#      ttl: 60s
#      provider: 
#        type: redis
#        id: redisCache_22
#      mapFields:
#        - "customer.id"

#validations:
#  - id: 8001
#    fields:
#    - name: "customer.name"
#      type: Required
#    - name: "customer.name"
#      type: biggerThen
#      size: 10
